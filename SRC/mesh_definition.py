# -*- coding: utf-8 -*-
"""
Created on Mon Jul 18 14:17:07 2022

@author: jesusglezs97
"""
def coarse_mesh_dict_x2():
    blocks = {}
    cell_size = (0.03125, 0.03125)
    B1 = {}
    B1['n_cells'] = (64,64)
    B1['cell_size'] = cell_size
    B1['relPos'] = (1,1)
    B1['isEmpty'] = False
    blocks['B1'] = B1
    B2 = {}
    B2['n_cells'] = (64,32)
    B2['cell_size'] = cell_size
    B2['relPos'] = (1,2)
    B2['isEmpty'] = False
    blocks['B2'] = B2
    B3 = {}
    B3['n_cells'] = (64,64)
    B3['cell_size'] = cell_size
    B3['relPos'] = (1,3)
    B3['isEmpty'] = False
    blocks['B3'] = B3
    B4 = {}
    B4['n_cells'] = (32,64)
    B4['cell_size'] = cell_size
    B4['relPos'] = (2,1)
    B4['isEmpty'] = False
    blocks['B4'] = B4
    B5 = {}
    B5['n_cells'] = (32,32)
    B5['cell_size'] = cell_size
    B5['relPos'] = (2,2)
    B5['isEmpty'] = True
    blocks['B5'] = B5
    B6 = {}
    B6['n_cells'] = (32,64)
    B6['cell_size'] = cell_size
    B6['relPos'] = (2,3)
    B6['isEmpty'] = False
    blocks['B6'] = B6
    B7 = {}
    B7['n_cells'] = (384,64)
    B7['cell_size'] = cell_size
    B7['relPos'] = (3,1)
    B7['isEmpty'] = False
    blocks['B7'] = B7
    B8 = {}
    B8['n_cells'] = (384,32)
    B8['cell_size'] = cell_size
    B8['relPos'] = (3,2)
    B8['isEmpty'] = False
    blocks['B8'] = B8
    B9 = {}
    B9['n_cells'] = (384,64)
    B9['cell_size'] = cell_size
    B9['relPos'] = (3,3)
    B9['isEmpty'] = False
    blocks['B9'] = B9

    return blocks

def coarse_mesh_dict_x4():
    blocks = {}
    cell_size = (0.0625, 0.0625)
    B1 = {}
    B1['n_cells'] = (32,32)
    B1['cell_size'] = cell_size
    B1['relPos'] = (1,1)
    B1['isEmpty'] = False
    blocks['B1'] = B1
    B2 = {}
    B2['n_cells'] = (32,16)
    B2['cell_size'] = cell_size
    B2['relPos'] = (1,2)
    B2['isEmpty'] = False
    blocks['B2'] = B2
    B3 = {}
    B3['n_cells'] = (32,32)
    B3['cell_size'] = cell_size
    B3['relPos'] = (1,3)
    B3['isEmpty'] = False
    blocks['B3'] = B3
    B4 = {}
    B4['n_cells'] = (16,32)
    B4['cell_size'] = cell_size
    B4['relPos'] = (2,1)
    B4['isEmpty'] = False
    blocks['B4'] = B4
    B5 = {}
    B5['n_cells'] = (16,16)
    B5['cell_size'] = cell_size
    B5['relPos'] = (2,2)
    B5['isEmpty'] = True
    blocks['B5'] = B5
    B6 = {}
    B6['n_cells'] = (16,32)
    B6['cell_size'] = cell_size
    B6['relPos'] = (2,3)
    B6['isEmpty'] = False
    blocks['B6'] = B6
    B7 = {}
    B7['n_cells'] = (192,32)
    B7['cell_size'] = cell_size
    B7['relPos'] = (3,1)
    B7['isEmpty'] = False
    blocks['B7'] = B7
    B8 = {}
    B8['n_cells'] = (192,16)
    B8['cell_size'] = cell_size
    B8['relPos'] = (3,2)
    B8['isEmpty'] = False
    blocks['B8'] = B8
    B9 = {}
    B9['n_cells'] = (192,32)
    B9['cell_size'] = cell_size
    B9['relPos'] = (3,3)
    B9['isEmpty'] = False
    blocks['B9'] = B9

    return blocks

def coarse_mesh_dict_x8():
    blocks = {}
    cell_size = (0.125, 0.125)
    B1 = {}
    B1['n_cells'] = (16,16)
    B1['cell_size'] = cell_size
    B1['relPos'] = (1,1)
    B1['isEmpty'] = False
    blocks['B1'] = B1
    B2 = {}
    B2['n_cells'] = (16,8)
    B2['cell_size'] = cell_size
    B2['relPos'] = (1,2)
    B2['isEmpty'] = False
    blocks['B2'] = B2
    B3 = {}
    B3['n_cells'] = (16,16)
    B3['cell_size'] = cell_size
    B3['relPos'] = (1,3)
    B3['isEmpty'] = False
    blocks['B3'] = B3
    B4 = {}
    B4['n_cells'] = (8,16)
    B4['cell_size'] = cell_size
    B4['relPos'] = (2,1)
    B4['isEmpty'] = False
    blocks['B4'] = B4
    B5 = {}
    B5['n_cells'] = (8,8)
    B5['cell_size'] = cell_size
    B5['relPos'] = (2,2)
    B5['isEmpty'] = True
    blocks['B5'] = B5
    B6 = {}
    B6['n_cells'] = (8,16)
    B6['cell_size'] = cell_size
    B6['relPos'] = (2,3)
    B6['isEmpty'] = False
    blocks['B6'] = B6
    B7 = {}
    B7['n_cells'] = (96,16)
    B7['cell_size'] = cell_size
    B7['relPos'] = (3,1)
    B7['isEmpty'] = False
    blocks['B7'] = B7
    B8 = {}
    B8['n_cells'] = (96,8)
    B8['cell_size'] = cell_size
    B8['relPos'] = (3,2)
    B8['isEmpty'] = False
    blocks['B8'] = B8
    B9 = {}
    B9['n_cells'] = (96,16)
    B9['cell_size'] = cell_size
    B9['relPos'] = (3,3)
    B9['isEmpty'] = False
    blocks['B9'] = B9

    return blocks

def coarse_mesh_dict_x16():
    blocks = {}
    cell_size = (0.25, 0.25)
    B1 = {}
    B1['n_cells'] = (8,8)
    B1['cell_size'] = cell_size
    B1['relPos'] = (1,1)
    B1['isEmpty'] = False
    blocks['B1'] = B1
    B2 = {}
    B2['n_cells'] = (8,4)
    B2['cell_size'] = cell_size
    B2['relPos'] = (1,2)
    B2['isEmpty'] = False
    blocks['B2'] = B2
    B3 = {}
    B3['n_cells'] = (8,8)
    B3['cell_size'] = cell_size
    B3['relPos'] = (1,3)
    B3['isEmpty'] = False
    blocks['B3'] = B3
    B4 = {}
    B4['n_cells'] = (4,8)
    B4['cell_size'] = cell_size
    B4['relPos'] = (2,1)
    B4['isEmpty'] = False
    blocks['B4'] = B4
    B5 = {}
    B5['n_cells'] = (4,4)
    B5['cell_size'] = cell_size
    B5['relPos'] = (2,2)
    B5['isEmpty'] = True
    blocks['B5'] = B5
    B6 = {}
    B6['n_cells'] = (4,8)
    B6['cell_size'] = cell_size
    B6['relPos'] = (2,3)
    B6['isEmpty'] = False
    blocks['B6'] = B6
    B7 = {}
    B7['n_cells'] = (48,8)
    B7['cell_size'] = cell_size
    B7['relPos'] = (3,1)
    B7['isEmpty'] = False
    blocks['B7'] = B7
    B8 = {}
    B8['n_cells'] = (48,4)
    B8['cell_size'] = cell_size
    B8['relPos'] = (3,2)
    B8['isEmpty'] = False
    blocks['B8'] = B8
    B9 = {}
    B9['n_cells'] = (48,8)
    B9['cell_size'] = cell_size
    B9['relPos'] = (3,3)
    B9['isEmpty'] = False
    blocks['B9'] = B9

    return blocks

def coarse_mesh_dict_x32():
    blocks = {}
    cell_size = (0.5, 0.5)
    B1 = {}
    B1['n_cells'] = (4,4)
    B1['cell_size'] = cell_size
    B1['relPos'] = (1,1)
    B1['isEmpty'] = False
    blocks['B1'] = B1
    B2 = {}
    B2['n_cells'] = (4,2)
    B2['cell_size'] = cell_size
    B2['relPos'] = (1,2)
    B2['isEmpty'] = False
    blocks['B2'] = B2
    B3 = {}
    B3['n_cells'] = (4,4)
    B3['cell_size'] = cell_size
    B3['relPos'] = (1,3)
    B3['isEmpty'] = False
    blocks['B3'] = B3
    B4 = {}
    B4['n_cells'] = (2,4)
    B4['cell_size'] = cell_size
    B4['relPos'] = (2,1)
    B4['isEmpty'] = False
    blocks['B4'] = B4
    B5 = {}
    B5['n_cells'] = (2,2)
    B5['cell_size'] = cell_size
    B5['relPos'] = (2,2)
    B5['isEmpty'] = True
    blocks['B5'] = B5
    B6 = {}
    B6['n_cells'] = (2,4)
    B6['cell_size'] = cell_size
    B6['relPos'] = (2,3)
    B6['isEmpty'] = False
    blocks['B6'] = B6
    B7 = {}
    B7['n_cells'] = (24,4)
    B7['cell_size'] = cell_size
    B7['relPos'] = (3,1)
    B7['isEmpty'] = False
    blocks['B7'] = B7
    B8 = {}
    B8['n_cells'] = (24,2)
    B8['cell_size'] = cell_size
    B8['relPos'] = (3,2)
    B8['isEmpty'] = False
    blocks['B8'] = B8
    B9 = {}
    B9['n_cells'] = (24,4)
    B9['cell_size'] = cell_size
    B9['relPos'] = (3,3)
    B9['isEmpty'] = False
    blocks['B9'] = B9

    return blocks

def fine_mesh_dict():
    blocks = {}
    cell_size = (0.015625, 0.015625)
    B1 = {}
    B1['n_cells'] = (128,128)
    B1['cell_size'] = cell_size
    B1['relPos'] = (1,1)
    B1['isEmpty'] = False
    blocks['B1'] = B1
    B2 = {}
    B2['n_cells'] = (128,64)
    B2['cell_size'] = cell_size
    B2['relPos'] = (1,2)
    B2['isEmpty'] = False
    blocks['B2'] = B2
    B3 = {}
    B3['n_cells'] = (128,128)
    B3['cell_size'] = cell_size
    B3['relPos'] = (1,3)
    B3['isEmpty'] = False
    blocks['B3'] = B3
    B4 = {}
    B4['n_cells'] = (64,128)
    B4['cell_size'] = cell_size
    B4['relPos'] = (2,1)
    B4['isEmpty'] = False
    blocks['B4'] = B4
    B5 = {}
    B5['n_cells'] = (64,64)
    B5['cell_size'] = cell_size
    B5['relPos'] = (2,2)
    B5['isEmpty'] = True
    blocks['B5'] = B5
    B6 = {}
    B6['n_cells'] = (64,128)
    B6['cell_size'] = cell_size
    B6['relPos'] = (2,3)
    B6['isEmpty'] = False
    blocks['B6'] = B6
    B7 = {}
    B7['n_cells'] = (768,128)
    B7['cell_size'] = cell_size
    B7['relPos'] = (3,1)
    B7['isEmpty'] = False
    blocks['B7'] = B7
    B8 = {}
    B8['n_cells'] = (768,64)
    B8['cell_size'] = cell_size
    B8['relPos'] = (3,2)
    B8['isEmpty'] = False
    blocks['B8'] = B8
    B9 = {}
    B9['n_cells'] = (768,128)
    B9['cell_size'] = cell_size
    B9['relPos'] = (3,3)
    B9['isEmpty'] = False
    blocks['B9'] = B9
    
    return blocks

    
def coarse_mesh_dict_reduced():
    blocks = {}
    cell_size = (0.125, 0.125)
    B1 = {}
    B1['n_cells'] = (16,16)
    B1['cell_size'] = cell_size
    B1['relPos'] = (1,1)
    B1['isEmpty'] = False
    blocks['B1'] = B1
    B2 = {}
    B2['n_cells'] = (16,8)
    B2['cell_size'] = cell_size
    B2['relPos'] = (1,2)
    B2['isEmpty'] = False
    blocks['B2'] = B2
    B3 = {}
    B3['n_cells'] = (16,16)
    B3['cell_size'] = cell_size
    B3['relPos'] = (1,3)
    B3['isEmpty'] = False
    blocks['B3'] = B3
    B4 = {}
    B4['n_cells'] = (8,16)
    B4['cell_size'] = cell_size
    B4['relPos'] = (2,1)
    B4['isEmpty'] = False
    blocks['B4'] = B4
    B5 = {}
    B5['n_cells'] = (8,8)
    B5['cell_size'] = cell_size
    B5['relPos'] = (2,2)
    B5['isEmpty'] = True
    blocks['B5'] = B5
    B6 = {}
    B6['n_cells'] = (8,16)
    B6['cell_size'] = cell_size
    B6['relPos'] = (2,3)
    B6['isEmpty'] = False
    blocks['B6'] = B6
    B7 = {}
    B7['n_cells'] = (16,16)
    B7['cell_size'] = cell_size
    B7['relPos'] = (3,1)
    B7['isEmpty'] = False
    blocks['B7'] = B7
    B8 = {}
    B8['n_cells'] = (16,8)
    B8['cell_size'] = cell_size
    B8['relPos'] = (3,2)
    B8['isEmpty'] = False
    blocks['B8'] = B8
    B9 = {}
    B9['n_cells'] = (16,16)
    B9['cell_size'] = cell_size
    B9['relPos'] = (3,3)
    B9['isEmpty'] = False
    blocks['B9'] = B9

    return blocks


def fine_mesh_dict_reduced():
    blocks = {}
    cell_size = (0.015625, 0.015625)
    B1 = {}
    B1['n_cells'] = (128,128)
    B1['cell_size'] = cell_size
    B1['relPos'] = (1,1)
    B1['isEmpty'] = False
    blocks['B1'] = B1
    B2 = {}
    B2['n_cells'] = (128,64)
    B2['cell_size'] = cell_size
    B2['relPos'] = (1,2)
    B2['isEmpty'] = False
    blocks['B2'] = B2
    B3 = {}
    B3['n_cells'] = (128,128)
    B3['cell_size'] = cell_size
    B3['relPos'] = (1,3)
    B3['isEmpty'] = False
    blocks['B3'] = B3
    B4 = {}
    B4['n_cells'] = (64,128)
    B4['cell_size'] = cell_size
    B4['relPos'] = (2,1)
    B4['isEmpty'] = False
    blocks['B4'] = B4
    B5 = {}
    B5['n_cells'] = (64,64)
    B5['cell_size'] = cell_size
    B5['relPos'] = (2,2)
    B5['isEmpty'] = True
    blocks['B5'] = B5
    B6 = {}
    B6['n_cells'] = (64,128)
    B6['cell_size'] = cell_size
    B6['relPos'] = (2,3)
    B6['isEmpty'] = False
    blocks['B6'] = B6
    B7 = {}
    B7['n_cells'] = (128,128)
    B7['cell_size'] = cell_size
    B7['relPos'] = (3,1)
    B7['isEmpty'] = False
    blocks['B7'] = B7
    B8 = {}
    B8['n_cells'] = (128,64)
    B8['cell_size'] = cell_size
    B8['relPos'] = (3,2)
    B8['isEmpty'] = False
    blocks['B8'] = B8
    B9 = {}
    B9['n_cells'] = (128,128)
    B9['cell_size'] = cell_size
    B9['relPos'] = (3,3)
    B9['isEmpty'] = False
    blocks['B9'] = B9
    
    return blocks

def tandem_fine_mesh_dict():
    blocks = {}
    cell_size = (0.015625, 0.015625)
    B1 = {}
    B1['n_cells'] = (128,128)
    B1['cell_size'] = cell_size
    B1['relPos'] = (1,1)
    B1['isEmpty'] = False
    blocks['B1'] = B1
    B2 = {}
    B2['n_cells'] = (128,64)
    B2['cell_size'] = cell_size
    B2['relPos'] = (1,2)
    B2['isEmpty'] = False
    blocks['B2'] = B2
    B3 = {}
    B3['n_cells'] = (128,128)
    B3['cell_size'] = cell_size
    B3['relPos'] = (1,3)
    B3['isEmpty'] = False
    blocks['B3'] = B3
    B4 = {}
    B4['n_cells'] = (64,128)
    B4['cell_size'] = cell_size
    B4['relPos'] = (2,1)
    B4['isEmpty'] = False
    blocks['B4'] = B4
    B5 = {}
    B5['n_cells'] = (64,64)
    B5['cell_size'] = cell_size
    B5['relPos'] = (2,2)
    B5['isEmpty'] = True
    blocks['B5'] = B5
    B6 = {}
    B6['n_cells'] = (64,128)
    B6['cell_size'] = cell_size
    B6['relPos'] = (2,3)
    B6['isEmpty'] = False
    blocks['B6'] = B6
    B7 = {}
    B7['n_cells'] = (320,128)
    B7['cell_size'] = cell_size
    B7['relPos'] = (3,1)
    B7['isEmpty'] = False
    blocks['B7'] = B7
    B8 = {}
    B8['n_cells'] = (320,64)
    B8['cell_size'] = cell_size
    B8['relPos'] = (3,2)
    B8['isEmpty'] = False
    blocks['B8'] = B8
    B9 = {}
    B9['n_cells'] = (320,128)
    B9['cell_size'] = cell_size
    B9['relPos'] = (3,3)
    B9['isEmpty'] = False
    blocks['B9'] = B9
    B10 = {}
    B10['n_cells'] = (64,128)
    B10['cell_size'] = cell_size
    B10['relPos'] = (4,1)
    B10['isEmpty'] = False
    blocks['B10'] = B10
    B11 = {}
    B11['n_cells'] = (64,64)
    B11['cell_size'] = cell_size
    B11['relPos'] = (4,2)
    B11['isEmpty'] = True
    blocks['B11'] = B11
    B12 = {}
    B12['n_cells'] = (64,128)
    B12['cell_size'] = cell_size
    B12['relPos'] = (4,3)
    B12['isEmpty'] = False
    blocks['B12'] = B12
    B13 = {}
    B13['n_cells'] = (768,128)
    B13['cell_size'] = cell_size
    B13['relPos'] = (5,1)
    B13['isEmpty'] = False
    blocks['B13'] = B13
    B14 = {}
    B14['n_cells'] = (768,64)
    B14['cell_size'] = cell_size
    B14['relPos'] = (5,2)
    B14['isEmpty'] = False
    blocks['B14'] = B14
    B15 = {}
    B15['n_cells'] = (768,128)
    B15['cell_size'] = cell_size
    B15['relPos'] = (5,3)
    B15['isEmpty'] = False
    blocks['B15'] = B15
    
    return blocks

def tandem_coarse_mesh_dict_x8():
    blocks = {}
    cell_size = (0.125, 0.125)
    B1 = {}
    B1['n_cells'] = (16,16)
    B1['cell_size'] = cell_size
    B1['relPos'] = (1,1)
    B1['isEmpty'] = False
    blocks['B1'] = B1
    B2 = {}
    B2['n_cells'] = (16,8)
    B2['cell_size'] = cell_size
    B2['relPos'] = (1,2)
    B2['isEmpty'] = False
    blocks['B2'] = B2
    B3 = {}
    B3['n_cells'] = (16,16)
    B3['cell_size'] = cell_size
    B3['relPos'] = (1,3)
    B3['isEmpty'] = False
    blocks['B3'] = B3
    B4 = {}
    B4['n_cells'] = (8,16)
    B4['cell_size'] = cell_size
    B4['relPos'] = (2,1)
    B4['isEmpty'] = False
    blocks['B4'] = B4
    B5 = {}
    B5['n_cells'] = (8,8)
    B5['cell_size'] = cell_size
    B5['relPos'] = (2,2)
    B5['isEmpty'] = True
    blocks['B5'] = B5
    B6 = {}
    B6['n_cells'] = (8,16)
    B6['cell_size'] = cell_size
    B6['relPos'] = (2,3)
    B6['isEmpty'] = False
    blocks['B6'] = B6
    B7 = {}
    B7['n_cells'] = (40,16)
    B7['cell_size'] = cell_size
    B7['relPos'] = (3,1)
    B7['isEmpty'] = False
    blocks['B7'] = B7
    B8 = {}
    B8['n_cells'] = (40,8)
    B8['cell_size'] = cell_size
    B8['relPos'] = (3,2)
    B8['isEmpty'] = False
    blocks['B8'] = B8
    B9 = {}
    B9['n_cells'] = (40,16)
    B9['cell_size'] = cell_size
    B9['relPos'] = (3,3)
    B9['isEmpty'] = False
    blocks['B9'] = B9
    B10 = {}
    B10['n_cells'] = (8,16)
    B10['cell_size'] = cell_size
    B10['relPos'] = (4,1)
    B10['isEmpty'] = False
    blocks['B10'] = B10
    B11 = {}
    B11['n_cells'] = (8,8)
    B11['cell_size'] = cell_size
    B11['relPos'] = (4,2)
    B11['isEmpty'] = True
    blocks['B11'] = B11
    B12 = {}
    B12['n_cells'] = (8,16)
    B12['cell_size'] = cell_size
    B12['relPos'] = (4,3)
    B12['isEmpty'] = False
    blocks['B12'] = B12
    B13 = {}
    B13['n_cells'] = (96,16)
    B13['cell_size'] = cell_size
    B13['relPos'] = (5,1)
    B13['isEmpty'] = False
    blocks['B13'] = B13
    B14 = {}
    B14['n_cells'] = (96,8)
    B14['cell_size'] = cell_size
    B14['relPos'] = (5,2)
    B14['isEmpty'] = False
    blocks['B14'] = B14
    B15 = {}
    B15['n_cells'] = (96,16)
    B15['cell_size'] = cell_size
    B15['relPos'] = (5,3)
    B15['isEmpty'] = False
    blocks['B15'] = B15
    return blocks